#!/bin/bash
set -e

echo "Hello Serverless-Devs!"

create_s_project() {
   echo "create serverless project";
}

deploy_s_project() {
   echo "Deploy serverless project";
}

display_s_help() {
    echo "Usage: gh s {create|deploy}"
    echo
    echo "   create -p xx  create serverless-devs project from template"
    echo "   deploy        trigger Github Actions and deploy project to Serverless platform"
    echo
    # echo some stuff here for the -a or --add-options
    exit 1
}

action=$1

case $action in
    "create")
       create_s_project "$2" "$3"
       ;;
    "deploy")
       deploy_s_project
       ;;
    -h|--help)
       display_s_help
       ;;
    *)
        echo "Unknown sub command, please use gh s --help"
esac


# Snippets to help get started:

# Determine if an executable is in the PATH
# if ! type -p ruby >/dev/null; then
#   echo "Ruby not found on the system" >&2
#   exit 1
# fi

# Pass arguments through to another command
# gh issue list "$@" -R cli/cli

# Using the gh api command to retrieve and format information
# QUERY='
#   query($endCursor: String) {
#     viewer {
#       repositories(first: 100, after: $endCursor) {
#         nodes {
#           nameWithOwner
#           stargazerCount
#         }
#       }
#     }
#   }
# '
# TEMPLATE='
#   {{- range $repo := .data.viewer.repositories.nodes -}}
#     {{- printf "name: %s - stargazers: %v\n" $repo.nameWithOwner $repo.stargazerCount -}}
#   {{- end -}}
# '
# exec gh api graphql -f query="${QUERY}" --paginate --template="${TEMPLATE}"
